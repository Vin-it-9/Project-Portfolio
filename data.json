[
  {
    "id": 1,
    "title": "BMW Car Website",
    "summary": "A modern, responsive BMW car showcase website built with HTML, CSS, and JavaScript.",
    "description": "This project is a visually appealing and responsive BMW car website. It features interactive galleries, modern layouts, and smooth navigation. Users can browse BMW models, view high-quality images, and enjoy a seamless experience across devices. The site is built using only HTML, CSS, and JavaScript, focusing on clean code, maintainability, and performance.",
    "image": "images/bmw/bmw.png",
    "category": "frontend",
    "isNew": false,
    "technologies": [
      {
        "name": "HTML",
        "icon": "fab fa-html5",
        "color": "#E34F26"
      },
      {
        "name": "CSS",
        "icon": "fab fa-css3-alt",
        "color": "#1572B6"
      },
      {
        "name": "JavaScript",
        "icon": "fab fa-js-square",
        "color": "#F7DF1E"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/BMW",
      "live": "https://vin-it-9.github.io/BMW/M5.html"
    },
    "gallery": [
      "gallery/bmw/image1.png",
      "gallery/bmw/image2.png",
      "gallery/bmw/image3.png",
      "gallery/bmw/image4.png"
    ],
    "features": [
      "Responsive design for all devices",
      "Interactive image gallery for BMW models",
      "Modern and clean UI/UX",
      "Fast load times with optimized images",
      "Smooth scrolling and navigation"
    ]
  },
  {
    "id": 2,
    "title": "vineefy - Music Player Web App",
    "summary": "A responsive web-based music player made with HTML, CSS, and JavaScript, supporting playlists and interactive controls.",
    "description": "vineefy is a sleek, modern music player web application built using HTML, CSS, and JavaScript. It allows users to play, pause, skip, and repeat songs from a playlist, view song details, and enjoy a responsive UI that works seamlessly across devices. The app organizes music files, displays song info and album art, and features a dynamic playlist with interactive controls for a smooth listening experience.",
    "image": "images/vineefy/main.png",
    "category": "frontend",
    "isNew": false,
    "technologies": [
      {
        "name": "HTML",
        "icon": "fab fa-html5",
        "color": "#E34F26"
      },
      {
        "name": "CSS",
        "icon": "fab fa-css3-alt",
        "color": "#1572B6"
      },
      {
        "name": "JavaScript",
        "icon": "fab fa-js-square",
        "color": "#F7DF1E"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/vineefy",
      "live": "https://vin-it-9.github.io/vineefy/"
    },
    "gallery": [
      "images/vineefy/img1.png",
      "images/vineefy/img2.png"
    ],
    "features": [
      "Responsive design for desktop and mobile",
      "Interactive music controls (play, pause, skip, repeat)",
      "Dynamic playlist with real-time updates",
      "Displays song title, artist, and album art",
      "Animated progress bar and time display",
      "Organized folder structure for music and images"
    ]
  },
  {
    "id": 3,
    "title": "SmartThings - Samsung Clone",
    "summary": "A frontend-only clone of Samsung SmartThings built with HTML and CSS.",
    "description": "This project is a responsive frontend clone of the Samsung SmartThings dashboard. Built using only HTML and CSS, it replicates the clean design and layout of the original SmartThings interface. Users can browse the dashboard, devices, and scenes, experiencing the look and feel of Samsung's smart home platform, with a focus on pixel-perfect styling and responsiveness.",
    "image": "images/smartthings/main.png",
    "category": "frontend",
    "isNew": false,
    "technologies": [
      {
        "name": "HTML",
        "icon": "fab fa-html5",
        "color": "#E34F26"
      },
      {
        "name": "CSS",
        "icon": "fab fa-css3-alt",
        "color": "#1572B6"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/SmartThings",
      "live": "https://vin-it-9.github.io/SmartThings/"
    },
    "gallery": [
      "images/smarthing/img1.png",
      "images/smarthing/img2.png",
      "images/smarthing/img3.png"
    ],
    "features": [
      "Pixel-perfect clone of Samsung SmartThings UI",
      "Responsive design for desktop and mobile devices",
      "Clean, modern layout and styling",
      "Easy to customize for other smart home dashboards"
    ]
  },
  {
    "id": 4,
    "title": "QR Code Generator",
    "summary": "A simple, responsive QR code generator built using only HTML and CSS.",
    "description": "This project is a minimal QR code generator web page, designed for ease of use and fast QR creation. It features a clean, responsive UI styled with modern CSS. Users can input text or URLs and instantly see a styled QR code, making it easy to share links or information. The focus is on accessibility, performance, and pixel-perfect design.",
    "image": "images/qr-code/main.png",
    "category": "frontend",
    "isNew": false,
    "technologies": [
      {
        "name": "HTML",
        "icon": "fab fa-html5",
        "color": "#E34F26"
      },
      {
        "name": "CSS",
        "icon": "fab fa-css3-alt",
        "color": "#1572B6"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/QR_Code",
      "live": "https://vin-it-9.github.io/QR_Code/"
    },
    "gallery": [
      "images/qr-code/img1.png",
      "images/qr-code/img2.png",
      "images/qr-code/img3.png",
      "images/qr-code/img4.png"
    ],
    "features": [
      "Instant QR code generation",
      "Clean, user-friendly interface",
      "Responsive design for all devices",
      "No JavaScript required (HTML and CSS only)"
    ]
  },
  {
    "id": 5,
    "title": "Heart Animation (WebGL Shader Art)",
    "summary": "A stunning animated heart rendered in real-time using HTML5 Canvas, WebGL, and GLSL shaders.",
    "description": "This project showcases an animated glowing heart built with HTML, CSS, and JavaScript. The animation leverages WebGL and custom GLSL shaders to render a heart shape with dynamic glowing effects and color gradients. The canvas automatically resizes for a responsive experience. All graphics logic, including heart curve math, bezier distance, and glowing visuals, are implemented in JavaScript and shader code, making this a visually impressive example of modern browser graphics.",
    "image": "images/heart-animation/main.png",
    "category": "frontend",
    "isNew": false,
    "technologies": [
      {
        "name": "HTML",
        "icon": "fab fa-html5",
        "color": "#E34F26"
      },
      {
        "name": "CSS",
        "icon": "fab fa-css3-alt",
        "color": "#1572B6"
      },
      {
        "name": "JavaScript",
        "icon": "fab fa-js-square",
        "color": "#F7DF1E"
      },
      {
        "name": "WebGL",
        "icon": "fas fa-cube",
        "color": "#9900FF"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/Heart",
      "live": ""
    },
    "gallery": [
      "images/heart-animation/img1.png",
      "images/heart-animation/img2.png",
      "images/heart-animation/img3.png",
      "images/heart-animation/img4.png"
    ],
    "features": [
      "Real-time animated heart using WebGL shaders",
      "Custom GLSL code for glowing, color gradients, and heart curve",
      "Responsive fullscreen canvas experience",
      "Minimalist design with pure JavaScript control"
    ]
  },
  {
    "id": 6,
    "title": "Text to Speech Converter",
    "summary": "A simple frontend web app that converts written text into spoken audio using the browser's speech synthesis.",
    "description": "This project provides a clean and intuitive interface for converting user-entered text into speech. Built entirely with HTML, CSS, and JavaScript, it leverages the Web Speech API to synthesize speech directly in the browser. Users can input any text, select a voice, adjust speed and pitch, and listen to the spoken output instantly. The design is responsive and suitable for both desktop and mobile devices.",
    "image": "images/text-to-speech/main.png",
    "category": "frontend",
    "isNew": false,
    "technologies": [
      {
        "name": "HTML",
        "icon": "fab fa-html5",
        "color": "#E34F26"
      },
      {
        "name": "CSS",
        "icon": "fab fa-css3-alt",
        "color": "#1572B6"
      },
      {
        "name": "JavaScript",
        "icon": "fab fa-js-square",
        "color": "#F7DF1E"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/text-to-speech",
      "live": "https://vin-it-9.github.io/text-to-speech/"
    },
    "gallery": [
      "images/text-to-speech/img1.png",
      "images/text-to-speech/img2.png",
      "images/text-to-speech/img3.png",
      "images/text-to-speech/img4.png"
    ],
    "features": [
      "Convert typed text to audible speech",
      "Select different voices and languages (if supported by browser)",
      "Adjust speech rate and pitch",
      "Responsive design for all device sizes"
    ]
  },
  {
    "id": 7,
    "title": "Calendar Web App",
    "summary": "A modern, interactive calendar built with HTML, CSS, and JavaScript.",
    "description": "This project is a responsive and visually appealing calendar web app. Users can view months, navigate between dates, and interact with the calendar UI. Built using HTML, CSS, and JavaScript, it showcases a clean design, smooth interactions, and flexible structure suitable for both desktop and mobile use. The focus is on ease of use, accessibility, and modern web standards.",
    "image": "images/calendar/main.png",
    "category": "frontend",
    "isNew": false,
    "technologies": [
      {
        "name": "HTML",
        "icon": "fab fa-html5",
        "color": "#E34F26"
      },
      {
        "name": "CSS",
        "icon": "fab fa-css3-alt",
        "color": "#1572B6"
      },
      {
        "name": "JavaScript",
        "icon": "fab fa-js-square",
        "color": "#F7DF1E"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/calendar",
      "live": "https://vin-it-9.github.io/calendar/"
    },
    "gallery": [
      "images/calendar/img1.png",
      "images/calendar/img2.png",
      "images/calendar/img3.png",
      "images/calendar/img4.png"
    ],
    "features": [
      "Responsive and modern calendar UI",
      "Navigate months and dates",
      "Clean and intuitive design",
      "Works on desktop and mobile devices"
    ]
  },
  {
    "id": 8,
    "title": "Marvel Movies Website Clone",
    "summary": "A pixel-perfect frontend clone of the official Marvel movies page.",
    "description": "This project is a faithful frontend-only clone of the Marvel Movies website (https://www.marvel.com/movies). Built using HTML and a touch of JavaScript, it recreates the layout, styling, and movie grid of the original site. The site is fully responsive, features interactive movie cards, and mimics the look and feel of the real Marvel site for a seamless user experience.",
    "image": "images/marvel/main.png",
    "category": "frontend",
    "isNew": false,
    "technologies": [
      {
        "name": "HTML",
        "icon": "fab fa-html5",
        "color": "#E34F26"
      },
      {
        "name": "CSS",
        "icon": "fab fa-css3-alt",
        "color": "#1572B6"
      },
      {
        "name": "JavaScript",
        "icon": "fab fa-js-square",
        "color": "#F7DF1E"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/Marvel",
      "live": "https://marvel-2lhbkwyaj-vin-it-9s-projects.vercel.app/"
    },
    "gallery": [
      "images/marvel/img1.png",
      "images/marvel/img2.png",
      "images/marvel/img3.png",
      "images/marvel/img4.png"
    ],
    "features": [
      "Pixel-perfect recreation of Marvel Movies page",
      "Interactive and responsive movie grid",
      "Modern, clean design matching the official site",
      "Deployed with Vercel for fast and reliable hosting"
    ]
  },
  {
    "id": 9,
    "title": "Bank management System",
    "summary": "A simple bank management system built with Java and HTML, featuring a user-friendly web interface.",
    "description": "This project is a bank system web application that allows users to manage basic banking operations such as creating accounts, viewing balances, and performing transactions. It is primarily built using Java for the backend logic, with HTML and a small amount of JavaScript for the frontend interface. The application demonstrates fundamental concepts of banking software, with a clean and intuitive design suitable for learning and demonstration purposes.",
    "image": "images/bank-management/main.png",
    "category": "fullstack",
    "isNew": false,
    "technologies": [
      {
        "name": "Java",
        "icon": "fab fa-java",
        "color": "#007396"
      },
      {
        "name": "HTML",
        "icon": "fab fa-html5",
        "color": "#E34F26"
      },
      {
        "name": "JavaScript",
        "icon": "fab fa-js-square",
        "color": "#F7DF1E"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/bank-system",
      "live": "https://vin-it-9.github.io/bank-system/"
    },
    "gallery": [
      "gallery/bank-management/img1.png",
      "gallery/bank-management/img2.png",
      "gallery/bank-management/img3.png",
      "gallery/bank-management/img4.png"
    ],
    "features": [
      "Create and manage bank accounts",
      "View account balances and details",
      "Perform deposit and withdrawal transactions",
      "Clean, user-friendly web interface",
      "Core logic implemented in Java"
    ]
  },
  {
    "id": 10,
    "title": "Search API",
    "summary": "A proof-of-concept Java Spring Boot API that enables buyers to search manufacturers by customized criteria.",
    "description": "This project is a backend Supplier Search API for Makersharks, designed to help buyers discover manufacturers using detailed filters like company name, location, nature of business, and manufacturing processes. The API is built with Java 17, Spring Boot, and MySQL, and supports flexible querying and pagination. The codebase includes sample data and example queries for easy testing with tools like Postman or cURL. All database tables are auto-created on startup via JPA configuration. This solution demonstrates scalable, filter-based supplier search as a foundation for B2B manufacturing platforms.",
    "image": "images/search-api/main.png",
    "category": "backend",
    "isNew": false,
    "technologies": [
      {
        "name": "Java",
        "icon": "fab fa-java",
        "color": "#007396"
      },
      {
        "name": "Spring Boot",
        "icon": "fas fa-leaf",
        "color": "#6DB33F"
      },
      {
        "name": "MySQL",
        "icon": "fas fa-database",
        "color": "#4479A1"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/Search_API",
      "live": ""
    },
    "gallery": [
      "gallery/search-api/img1.png",
      "gallery/search-api/img2.png",
      "gallery/search-api/img3.png",
      "gallery/search-api/img4.png"
    ],
    "features": [
      "Flexible supplier search with filters: company name, website, location, nature of business, and manufacturing process",
      "Pagination support for large result sets",
      "Auto-creation of database tables on start",
      "Sample data and ready-to-use SQL scripts included",
      "Detailed API documentation with example requests using cURL"
    ]
  },
  {
    "id": 11,
    "title": "Real-Time Chat App with WebSocket",
    "summary": "A full-stack real-time chat application using Java (Spring Boot), WebSocket, and modern frontend technologies.",
    "description": "This project is a complete real-time chat application that enables users to exchange messages instantly. The backend is built with Java and Spring Boot, leveraging WebSocket technology for bidirectional, low-latency communication. The frontend is crafted using HTML, CSS, and JavaScript for a responsive, intuitive chat interface. Users can join chat rooms, send and receive messages in real time, and experience a seamless messaging platform suitable for both desktop and mobile browsers. The project demonstrates full-stack development, real-time data streaming, and practical use of WebSocket for modern web applications.",
    "image": "images/chat-app-websocket/main.png",
    "category": "fullstack",
    "isNew": false,
    "technologies": [
      {
        "name": "Java",
        "icon": "fab fa-java",
        "color": "#007396"
      },
      {
        "name": "Spring Boot",
        "icon": "fas fa-leaf",
        "color": "#6DB33F"
      },
      {
        "name": "WebSocket",
        "icon": "fas fa-exchange-alt",
        "color": "#00BFFF"
      },
      {
        "name": "JavaScript",
        "icon": "fab fa-js-square",
        "color": "#F7DF1E"
      },
      {
        "name": "HTML",
        "icon": "fab fa-html5",
        "color": "#E34F26"
      },
      {
        "name": "CSS",
        "icon": "fab fa-css3-alt",
        "color": "#1572B6"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/chat-app-websocket",
      "live": ""
    },
    "gallery": [
      "gallery/chat-app-websocket/img1.png",
      "gallery/chat-app-websocket/img2.png",
      "gallery/chat-app-websocket/img3.png",
      "gallery/chat-app-websocket/img4.png"
    ],
    "features": [
      "Real-time messaging using WebSocket protocol",
      "Backend powered by Java Spring Boot",
      "Interactive, responsive chat interface with HTML, CSS, and JavaScript",
      "Multiple user and chat room support",
      "Seamless message delivery and instant updates",
      "Suitable for desktop and mobile browsers"
    ]
  },
  {
    "id": 12,
    "title": "Bank Management REST API",
    "summary": "A robust banking backend developed with Java Spring Boot, offering comprehensive RESTful APIs for account and transaction management.",
    "description": "This project delivers a full-featured Bank Management API, built with Java and Spring Boot. It provides a secure set of endpoints for creating and managing bank accounts, handling customer information, processing deposits and withdrawals, and tracking transaction history. The API follows REST principles and is designed for scalability, maintainability, and easy integration with frontend clients or third-party services. It includes configuration for security, data persistence, and error handling, making it a strong foundation for modern banking solutions or educational purposes.",
    "image": "images/bank-management-api/main.png",
    "category": "backend",
    "isNew": false,
    "technologies": [
      {
        "name": "Java",
        "icon": "fab fa-java",
        "color": "#007396"
      },
      {
        "name": "Spring Boot",
        "icon": "fas fa-leaf",
        "color": "#6DB33F"
      },
      {
        "name": "REST API",
        "icon": "fas fa-plug",
        "color": "#4CAF50"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/Bank-Management-API",
      "live": ""
    },
    "gallery": [
      "gallery/bank-management-api/img1.png",
      "gallery/bank-management-api/img2.png",
      "gallery/bank-management-api/img3.png",
      "gallery/bank-management-api/img4.png"
    ],
    "features": [
      "RESTful endpoints for account, customer, and transaction management",
      "Secure authentication and authorization best practices",
      "Deposit, withdrawal, and transfer APIs with transaction history",
      "Robust error handling and validation",
      "Easy integration with frontend or mobile clients",
      "Built with Java Spring Boot for scalability and reliability"
    ]
  },
  {
    "id": 13,
    "title": "Personal Portfolio Website",
    "summary": "A modern, responsive portfolio website showcasing projects, skills, and achievements.",
    "description": "This project is a feature-rich personal portfolio website designed to highlight your professional journey, skills, and project work. Built mainly with HTML and CSS, it integrates custom JavaScript for interactivity and smooth navigation. The site presents sections such as About, Projects, Skills, Resume, and Contact, and is fully responsive, ensuring a seamless experience across devices. LaTeX (TeX) is utilized for rendering high-quality resume/CV sections or publications. The structure is clean and extensible, making it easy to update with new content or adapt for other professional uses.",
    "image": "images/portfolio/main.png",
    "category": "frontend",
    "isNew": false,
    "technologies": [
      {
        "name": "HTML",
        "icon": "fab fa-html5",
        "color": "#E34F26"
      },
      {
        "name": "CSS",
        "icon": "fab fa-css3-alt",
        "color": "#1572B6"
      },
      {
        "name": "JavaScript",
        "icon": "fab fa-js-square",
        "color": "#F7DF1E"
      },
      {
        "name": "LaTeX",
        "icon": "fas fa-file-alt",
        "color": "#008080"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/portfolio",
      "live": ""
    },
    "gallery": [
      "gallery/portfolio/img1.png",
      "gallery/portfolio/img2.png",
      "gallery/portfolio/img3.png",
      "gallery/portfolio/img4.png"
    ],
    "features": [
      "Responsive design for desktop and mobile",
      "Project, skills, and resume/CV sections",
      "Interactive UI with smooth navigation",
      "LaTeX/TeX integration for publications or CV",
      "Easily customizable for personal branding"
    ]
  },
  {
    "id": 14,
    "title": "Microservice Architecture Demo",
    "summary": "A comprehensive demonstration of microservices using Java Spring Boot, illustrating service decomposition, communication, and scalability.",
    "description": "This project showcases a microservice architecture implemented with Java and Spring Boot. It features multiple independent services, each responsible for a distinct business capability, communicating via REST APIs or messaging. The architecture demonstrates best practices for service discovery, inter-service communication, data management, and fault tolerance. This solution provides a scalable and maintainable foundation for building modern distributed systems, ideal for educational purposes, prototypes, or as a baseline for enterprise applications.",
    "image": "images/microservice/main.png",
    "category": "backend",
    "isNew": false,
    "technologies": [
      {
        "name": "Java",
        "icon": "fab fa-java",
        "color": "#007396"
      },
      {
        "name": "Spring Boot",
        "icon": "fas fa-leaf",
        "color": "#6DB33F"
      },
      {
        "name": "REST API",
        "icon": "fas fa-plug",
        "color": "#4CAF50"
      },
      {
        "name": "Microservices",
        "icon": "fas fa-network-wired",
        "color": "#00B8D9"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/Microservice",
      "live": ""
    },
    "gallery": [
      "gallery/microservice/img1.png",
      "gallery/microservice/img2.png",
      "gallery/microservice/img3.png",
      "gallery/microservice/img4.png"
    ],
    "features": [
      "Multiple independent Spring Boot microservices",
      "RESTful APIs for inter-service communication",
      "Service discovery and registration (Eureka/Consul compatible)",
      "Scalable, modular, and maintainable codebase",
      "Demonstrates fault tolerance and resilience patterns",
      "Ideal for learning, prototyping, or as a starter for enterprise microservices"
    ]
  },
  {
    "id": 15,
    "title": "Nexus: Connecting Ideas, Inspiring Conversations (Full-Stack Blog Platform)",
    "summary": "A secure, feature-rich blogging platform with admin and user roles, built using Java Spring Boot, MySQL, and a modern responsive frontend.",
    "description": "Nexus is a robust, full-stack blogging website designed for seamless content creation and management. Featuring a secure backend with Java Spring Boot, Spring Security, and MySQL, it offers both admin and user panels. Administrators can view, block, or remove users and oversee posts. Users can register, verify their emails, and create, update, or delete blogs with images. Engagement is enhanced through commenting and liking, with all authentication handled via JWT tokens. The frontend uses Thymeleaf, Tailwind CSS, and JavaScript for a sleek, intuitive interface with dark mode support. Security best practices are followed throughout, including password reset via email verification and secure logout. The platform is easy to set up with Maven and is designed for extensibility and maintainability.",
    "image": "images/blog/main.png",
    "category": "fullstack",
    "isNew": false,
    "technologies": [
      {
        "name": "Java",
        "icon": "fab fa-java",
        "color": "#007396"
      },
      {
        "name": "Spring Boot",
        "icon": "fas fa-leaf",
        "color": "#6DB33F"
      },
      {
        "name": "Spring Security",
        "icon": "fas fa-shield-alt",
        "color": "#4A90E2"
      },
      {
        "name": "MySQL",
        "icon": "fas fa-database",
        "color": "#4479A1"
      },
      {
        "name": "Thymeleaf",
        "icon": "fas fa-leaf",
        "color": "#005F0F"
      },
      {
        "name": "Tailwind CSS",
        "icon": "fas fa-wind",
        "color": "#38BDF8"
      },
      {
        "name": "JavaScript",
        "icon": "fab fa-js-square",
        "color": "#F7DF1E"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/Blog",
      "live": ""
    },
    "gallery": [
      "gallery/blog/img1.png",
      "gallery/blog/img2.png",
      "gallery/blog/img3.png",
      "gallery/blog/img4.png"
    ],
    "features": [
      "Admin panel for user and content management",
      "Secure registration, login, and JWT authentication",
      "Email verification and password reset via Spring Mail",
      "Create, edit, and delete blogs with image upload",
      "Comment and like functionality on posts",
      "User dashboard for managing posts and settings",
      "Responsive and modern UI with dark mode",
      "MySQL for data persistence; auto table creation",
      "Spring Security-based session and logout management"
    ]
  },
  {
    "id": 16,
    "title": "Nexkart E-Commerce Website",
    "summary": "A scalable, full-featured e-commerce platform with separate admin and user portals, built using Spring Boot, AWS, and modern web technologies.",
    "description": "Nexkart is a robust end-to-end e-commerce solution developed with Java Spring Boot, offering comprehensive admin and user experiences. The system features a dedicated admin portal for managing users, categories, brands, products, orders, shipping, reports, and site settings. The user portal provides a seamless shopping journey with secure authentication (including Google and Facebook OAuth), product browsing, cart management, checkout with PayPal/COD, reviews, and order tracking. Both portals utilize responsive design for optimal usability. Product images are managed through AWS S3, and data is stored in AWS RDS MySQL. The application prioritizes security, scalability, and flexibility, supporting cloud deployment on Heroku.",
    "image": "images/nexkart/main.png",
    "category": "fullstack",
    "isNew": false,
    "technologies": [
      {
        "name": "Java",
        "icon": "fab fa-java",
        "color": "#007396"
      },
      {
        "name": "Spring Boot",
        "icon": "fas fa-leaf",
        "color": "#6DB33F"
      },
      {
        "name": "Spring Security",
        "icon": "fas fa-shield-alt",
        "color": "#4A90E2"
      },
      {
        "name": "Spring Data JPA",
        "icon": "fas fa-database",
        "color": "#F29111"
      },
      {
        "name": "Thymeleaf",
        "icon": "fas fa-leaf",
        "color": "#005F0F"
      },
      {
        "name": "Tailwind CSS",
        "icon": "fas fa-wind",
        "color": "#38BDF8"
      },
      {
        "name": "JavaScript",
        "icon": "fab fa-js-square",
        "color": "#F7DF1E"
      },
      {
        "name": "jQuery",
        "icon": "fas fa-code",
        "color": "#0769AD"
      },
      {
        "name": "MySQL (AWS RDS)",
        "icon": "fas fa-database",
        "color": "#4479A1"
      },
      {
        "name": "AWS S3",
        "icon": "fas fa-cloud",
        "color": "#FF9900"
      },
      {
        "name": "PayPal API",
        "icon": "fab fa-cc-paypal",
        "color": "#003087"
      },
      {
        "name": "Heroku",
        "icon": "fas fa-cloud-upload-alt",
        "color": "#430098"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/Nexkart",
      "live": ""
    },
    "gallery": [
      "gallery/nexkart/img1.png",
      "gallery/nexkart/img2.png",
      "gallery/nexkart/img3.png",
      "gallery/nexkart/img4.png"
    ],
    "features": [
      "Separate admin and user portals for improved security and management",
      "Admin panel: manage users, roles, categories, brands, products, orders, shipping, analytics, and settings",
      "User panel: browse, search, filter, and review products; manage cart and orders; track shipping",
      "Social login integration with Google and Facebook",
      "Secure authentication and authorization with Spring Security and JWT",
      "PayPal and Cash on Delivery payment support",
      "Product image upload and management with AWS S3",
      "Data persistence with AWS RDS MySQL",
      "Responsive UI with Tailwind CSS, Thymeleaf, JavaScript, and jQuery",
      "Cloud deployment ready (Heroku)",
      "Comprehensive analytics and reporting for admins"
    ]
  },
  {
    "id": 17,
    "title": "Amanora The Fern Hotels and Club – Hotel Management System",
    "summary": "A full-featured hotel management platform for Amanora The Fern Hotels and Club, Pune, built with Spring Boot, Spring Security, and a modern web frontend.",
    "description": "This project is an enterprise-grade Hotel Management System designed for Amanora The Fern Hotels and Club in Pune. It streamlines hotel operations, including room and amenity management, bookings, user registration, admin controls, event scheduling, food and service orders, and reporting. The backend is powered by Java Spring Boot, Spring Data JPA, Spring Security, and MySQL, ensuring secure and robust data handling. The frontend uses Thymeleaf, Tailwind CSS, and JavaScript for a responsive, intuitive experience with both light and dark modes. The system supports secure JWT-based authentication, email verification, and password management, and provides detailed analytics for admins. The design ensures scalability, security, and a seamless experience for both staff and guests.",
    "image": "images/hotel-management-system/main.png",
    "category": "fullstack",
    "isNew": false,
    "technologies": [
      {
        "name": "Java",
        "icon": "fab fa-java",
        "color": "#007396"
      },
      {
        "name": "Spring Boot",
        "icon": "fas fa-leaf",
        "color": "#6DB33F"
      },
      {
        "name": "Spring Security",
        "icon": "fas fa-shield-alt",
        "color": "#4A90E2"
      },
      {
        "name": "Spring Data JPA",
        "icon": "fas fa-database",
        "color": "#F29111"
      },
      {
        "name": "Spring Mail",
        "icon": "fas fa-envelope",
        "color": "#EA4335"
      },
      {
        "name": "MySQL",
        "icon": "fas fa-database",
        "color": "#4479A1"
      },
      {
        "name": "Thymeleaf",
        "icon": "fas fa-leaf",
        "color": "#005F0F"
      },
      {
        "name": "Tailwind CSS",
        "icon": "fas fa-wind",
        "color": "#38BDF8"
      },
      {
        "name": "JavaScript",
        "icon": "fab fa-js-square",
        "color": "#F7DF1E"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/hotel-management-system",
      "live": ""
    },
    "gallery": [
      "gallery/hotel-management-system/img1.png",
      "gallery/hotel-management-system/img2.png",
      "gallery/hotel-management-system/img3.png",
      "gallery/hotel-management-system/img4.png"
    ],
    "features": [
      "Admin panel for comprehensive hotel, room, amenity, user, booking, order, and event management",
      "Dynamic room type and amenity configuration",
      "User registration, login, and email verification with JWT tokens",
      "Password reset and change via secure email verification",
      "Personalized dashboard for users with booking, orders, and profile management",
      "Event and function hall booking",
      "Food and service order management",
      "Booking modifications and cancellation (as per policy)",
      "Feedback and review system",
      "Reports and analytics for occupancy, user engagement, and bookings",
      "Notifications for booking updates, offers, and announcements",
      "Dark mode and light mode UI",
      "Secure logout and session management with Spring Security",
      "Database auto-initialization on first run with default admin and user accounts"
    ]
  },
  {
    "id": 18,
    "title": "Banking Microservices Architecture",
    "summary": "A modular banking system built with Spring Boot and Micronaut, following scalable microservices architecture for modern financial operations.",
    "description": "This project implements a microservices-based banking platform with distinct, decoupled services for user management, accounts, transactions, and loans. Leveraging Spring Boot for the Eureka service registry and API gateway, and Micronaut for lightweight, fast domain services, this architecture is designed for high scalability, maintainability, and security. Each microservice (User, Account, Transaction, Loan) exposes robust REST APIs and communicates via the API gateway, with service discovery managed by Eureka. Security and authentication are built-in, and the system is ready for extension or cloud deployment.",
    "image": "images/bank-managment-microservice/main.png",
    "category": "backend",
    "isNew": false,
    "technologies": [
      {
        "name": "Java",
        "icon": "fab fa-java",
        "color": "#007396"
      },
      {
        "name": "Spring Boot",
        "icon": "fas fa-leaf",
        "color": "#6DB33F"
      },
      {
        "name": "Micronaut",
        "icon": "fas fa-cubes",
        "color": "#00B7C3"
      },
      {
        "name": "Spring Cloud Netflix",
        "icon": "fas fa-network-wired",
        "color": "#4A90E2"
      },
      {
        "name": "JPA/Hibernate",
        "icon": "fas fa-database",
        "color": "#F29111"
      },
      {
        "name": "MySQL",
        "icon": "fas fa-database",
        "color": "#4479A1"
      },
      {
        "name": "REST API",
        "icon": "fas fa-plug",
        "color": "#4CAF50"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/Bank-Managment-Microservice",
      "live": ""
    },
    "gallery": [
      "gallery/bank-managment-microservice/img1.png",
      "gallery/bank-managment-microservice/img2.png",
      "gallery/bank-managment-microservice/img3.png",
      "gallery/bank-managment-microservice/img4.png"
    ],
    "features": [
      "Modular architecture with 6 independently deployable microservices",
      "Service discovery and registration with Eureka Server",
      "API Gateway for unified routing and security",
      "User management, account management, transaction processing, and loan management as dedicated services",
      "Robust REST APIs for all operations",
      "Secure authentication and inter-service communication",
      "Data persistence with JPA/Hibernate and MySQL",
      "Easily extensible for new banking features or integrations",
      "Separation of concerns for improved maintainability and scalability"
    ]
  },
  {
    "id": 19,
    "title": "Banner Generator (Quarkus)",
    "summary": "A fast, modern REST API for generating banners, built with Quarkus – the supersonic subatomic Java framework.",
    "description": "Banner Generator is a high-performance RESTful web service designed to generate custom banners on-demand. Powered by the Quarkus framework, it offers lightning-fast startup and low memory usage, making it ideal for cloud-native environments and serverless deployments. The project features live coding with Quarkus Dev UI, supports multiple packaging options (standard JAR, über-jar, native executable via GraalVM), and is built for easy extensibility. The REST endpoints allow users to create, customize, and retrieve banners dynamically. The codebase is clean, idiomatic Java, leveraging Quarkus best practices for dependency injection, configuration, and rapid development.",
    "image": "images/banner-generator/main.png",
    "category": "backend",
    "isNew": true,
    "technologies": [
      {
        "name": "Java",
        "icon": "fab fa-java",
        "color": "#007396"
      },
      {
        "name": "Quarkus",
        "icon": "fas fa-rocket",
        "color": "#4695EB"
      },
      {
        "name": "REST API",
        "icon": "fas fa-plug",
        "color": "#4CAF50"
      },
      {
        "name": "Maven",
        "icon": "fab fa-maven",
        "color": "#C71A36"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/Banner-Generator",
      "live": ""
    },
    "gallery": [
      "gallery/banner-generator/img1.png",
      "gallery/banner-generator/img2.png",
      "gallery/banner-generator/img3.png",
      "gallery/banner-generator/img4.png"
    ],
    "features": [
      "Quarkus-powered for ultra-fast startup and minimal memory footprint",
      "RESTful endpoints for dynamic banner generation",
      "Live coding support with Quarkus Dev UI",
      "Multiple build targets: standard JAR, über-jar, native executable with GraalVM",
      "Easy deployment to cloud and serverless platforms",
      "Clean, idiomatic Java codebase with Quarkus best practices"
    ]
  },
  {
    "id": 20,
    "title": "Websockets Chat App (Quarkus)",
    "summary": "A real-time chat application built with Quarkus, WebSockets, and a modern frontend using Tailwind CSS, HTML, and JavaScript.",
    "description": "This project is a lightweight, high-performance chat app that leverages Quarkus for the backend and the WebSocket protocol for instant, bidirectional communication. The frontend is crafted with Tailwind CSS, HTML, and JavaScript, providing a responsive and user-friendly UI. Users can join chat rooms and exchange messages in real time. The solution demonstrates Quarkus's reactive capabilities and is suitable for cloud-native and microservice environments. Ideal for learning, prototyping, or as a starting point for scalable chat solutions.",
    "image": "images/websockets-quarkus/main.png",
    "category": "fullstack",
    "isNew": true,
    "technologies": [
      {
        "name": "Java",
        "icon": "fab fa-java",
        "color": "#007396"
      },
      {
        "name": "Quarkus",
        "icon": "fas fa-rocket",
        "color": "#4695EB"
      },
      {
        "name": "WebSocket",
        "icon": "fas fa-exchange-alt",
        "color": "#00BFFF"
      },
      {
        "name": "Tailwind CSS",
        "icon": "fas fa-wind",
        "color": "#38BDF8"
      },
      {
        "name": "JavaScript",
        "icon": "fab fa-js-square",
        "color": "#F7DF1E"
      },
      {
        "name": "HTML",
        "icon": "fab fa-html5",
        "color": "#E34F26"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/Websockets-Quarkus",
      "live": ""
    },
    "gallery": [
      "gallery/websockets-quarkus/img1.png",
      "gallery/websockets-quarkus/img2.png",
      "gallery/websockets-quarkus/img3.png",
      "gallery/websockets-quarkus/img4.png"
    ],
    "features": [
      "Real-time chat using WebSockets and Quarkus",
      "Responsive frontend with Tailwind CSS, HTML, and JavaScript",
      "Join chat rooms and exchange messages instantly",
      "Lightweight and scalable architecture",
      "Perfect for learning, demos, or as a foundation for larger chat systems"
    ]
  },
  {
    "id": 21,
    "title": "Java Online Compiler (Quarkus)",
    "summary": "A secure, high-performance web-based Java compiler and interpreter with real-time code analysis and execution statistics, powered by Quarkus.",
    "description": "Java Online Compiler is a web application that allows users to write, compile, and execute Java code securely and efficiently in the browser. Built with the Quarkus framework, it provides fast compilation using class caching, sandboxed execution for safety, and detailed runtime statistics (including memory usage and execution time). The intuitive web interface makes it easy to input code and view results. API endpoints are also available for automated integration. The application implements resource management (memory, stack size, timeouts) and offers real-time code analysis to detect main methods and public classes. Docker support makes deployment simple.",
    "image": "images/java-compiler/main.png",
    "category": "backend",
    "isNew": true,
    "technologies": [
      {
        "name": "Java",
        "icon": "fab fa-java",
        "color": "#007396"
      },
      {
        "name": "Quarkus",
        "icon": "fas fa-rocket",
        "color": "#4695EB"
      },
      {
        "name": "RESTEasy",
        "icon": "fas fa-plug",
        "color": "#4CAF50"
      },
      {
        "name": "CDI",
        "icon": "fas fa-cubes",
        "color": "#00B7C3"
      },
      {
        "name": "Docker",
        "icon": "fab fa-docker",
        "color": "#2496ED"
      },
      {
        "name": "HTML",
        "icon": "fab fa-html5",
        "color": "#E34F26"
      },
      {
        "name": "CSS",
        "icon": "fab fa-css3-alt",
        "color": "#1572B6"
      },
      {
        "name": "JavaScript",
        "icon": "fab fa-js-square",
        "color": "#F7DF1E"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/JavaCompiler",
      "live": ""
    },
    "gallery": [
      "gallery/java-compiler/img1.png",
      "gallery/java-compiler/img2.png",
      "gallery/java-compiler/img3.png",
      "gallery/java-compiler/img4.png"
    ],
    "features": [
      "Fast Java compilation with class caching",
      "Sandboxed, secure code execution",
      "Memory and execution time monitoring",
      "Automatic code analysis (main method and public class detection)",
      "Detailed error reporting and execution statistics",
      "Configurable resource limits (memory, stack size, timeouts)",
      "REST API for programmatic access",
      "Intuitive, responsive web interface",
      "Easy Dockerized deployment",
      "Robust input validation and security measures"
    ]
  },
  {
    "id": 22,
    "title": "Java Roadmap",
    "summary": "A comprehensive and structured Java learning roadmap with curated resources, best practices, and project guidelines for developers at all levels.",
    "description": "Java Roadmap is an organized guide for learning Java, designed to help beginners, intermediates, and advanced developers build strong programming foundations and expertise. The roadmap covers core Java concepts, object-oriented programming, advanced Java features, best practices, and modern frameworks. Curated resources, tutorials, and recommended project ideas are included, making it easy to follow a progressive path from basics to mastery. The roadmap is suitable for self-learners, students, and professionals aiming to upskill or prepare for job interviews. It is community-driven and regularly updated.",
    "image": "images/java-roadmap/main.png",
    "category": "documentation",
    "isNew": true,
    "technologies": [
      {
        "name": "Java",
        "icon": "fab fa-java",
        "color": "#007396"
      },
      {
        "name": "Markdown",
        "icon": "fab fa-markdown",
        "color": "#083fa1"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/Java-Roadmap",
      "live": ""
    },
    "gallery": [
      "gallery/java-roadmap/img1.png",
      "gallery/java-roadmap/img2.png",
      "gallery/java-roadmap/img3.png",
      "gallery/java-roadmap/img4.png"
    ],
    "features": [
      "Step-by-step Java learning path from beginner to advanced",
      "Curated resources, tutorials, books, and online courses",
      "Key core concepts: syntax, OOP, collections, multithreading, etc.",
      "Advanced topics: streams, generics, JVM internals, frameworks",
      "Best practices and coding standards",
      "Project ideas and interview prep",
      "Community-driven and regularly updated"
    ]
  },
  {
    "id": 23,
    "title": "AI Chat Assistant (Quarkus + Ollama)",
    "summary": "A modern, privacy-focused AI chat application powered by Quarkus, Ollama, and LangChain4j, with real-time chat and WebSocket support.",
    "description": "AI Chat Assistant is a locally-hosted, web-based AI chat platform that lets users interact with advanced language models (LLMs) served by Ollama directly on their machine. Designed for privacy and speed, all conversation processing is local, ensuring data never leaves your computer. The sleek UI, built with Tailwind CSS, features real-time chat, typing animations, and chat session management. The backend leverages Quarkus for ultra-fast performance, LangChain4j for LLM orchestration, and supports both REST and WebSocket APIs for instant communication. This setup is ideal for privacy-conscious users, developers, and power users who want a customizable, local AI experience.",
    "image": "images/ai-chat-assistant/main.png",
    "category": "fullstack",
    "isNew": true,
    "technologies": [
      {
        "name": "Java",
        "icon": "fab fa-java",
        "color": "#007396"
      },
      {
        "name": "Quarkus",
        "icon": "fas fa-rocket",
        "color": "#4695EB"
      },
      {
        "name": "Ollama",
        "icon": "fas fa-brain",
        "color": "#4B8BF4"
      },
      {
        "name": "LangChain4j",
        "icon": "fas fa-link",
        "color": "#3F51B5"
      },
      {
        "name": "WebSocket",
        "icon": "fas fa-exchange-alt",
        "color": "#00BFFF"
      },
      {
        "name": "REST API",
        "icon": "fas fa-plug",
        "color": "#4CAF50"
      },
      {
        "name": "Tailwind CSS",
        "icon": "fas fa-wind",
        "color": "#38BDF8"
      },
      {
        "name": "JavaScript",
        "icon": "fab fa-js-square",
        "color": "#F7DF1E"
      },
      {
        "name": "HTML",
        "icon": "fab fa-html5",
        "color": "#E34F26"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/AI-Chat",
      "live": ""
    },
    "gallery": [
      "gallery/ai-chat-assistant/img1.png",
      "gallery/ai-chat-assistant/img2.png",
      "gallery/ai-chat-assistant/img3.png",
      "gallery/ai-chat-assistant/img4.png"
    ],
    "features": [
      "Real-time chat with local LLMs (Ollama)",
      "100% privacy – all AI processing is local",
      "Modern, responsive UI with typing animations",
      "WebSocket support for instant messaging",
      "REST API as fallback for integrations",
      "Chat session management and easy reset",
      "Beautiful design with Tailwind CSS",
      "Configurable model and Ollama instance",
      "Simple API for programmatic access"
    ]
  },
  {
    "id": 24,
    "title": "Password Strength Analyzer (Barclays Hackathon 2025)",
    "summary": "An intelligent password strength analysis tool with GenAI-powered recommendations, built for the Barclays Hackathon 2025. Offers real-time analysis, security metrics, and advanced password enhancement.",
    "description": "SecurePass Analyzer is a cutting-edge password security platform developed for the Barclays Hackathon 2025. It evaluates password strength using advanced entropy and pattern analysis, provides AI-driven improvement suggestions, and explains vulnerabilities in clear language. The backend leverages Python with Flask and GenAI models, while the frontend uses responsive JavaScript, HTML, and Tailwind CSS for a seamless user experience. Users get detailed feedback, actionable tips, and secure password transformation algorithms that balance memorability with security. The tool features a RESTful API, real-time frontend analysis, and a robust ML-based recommendation engine, making it ideal for online banking and financial security applications.",
    "image": "images/barclays-hackathon/main.png",
    "category": "fullstack",
    "isNew": true,
    "technologies": [
      {
        "name": "Python",
        "icon": "fab fa-python",
        "color": "#3776AB"
      },
      {
        "name": "Flask",
        "icon": "fas fa-flask",
        "color": "#000000"
      },
      {
        "name": "GenAI",
        "icon": "fas fa-robot",
        "color": "#00B8D9"
      },
      {
        "name": "JavaScript",
        "icon": "fab fa-js-square",
        "color": "#F7DF1E"
      },
      {
        "name": "HTML",
        "icon": "fab fa-html5",
        "color": "#E34F26"
      },
      {
        "name": "Tailwind CSS",
        "icon": "fas fa-wind",
        "color": "#38BDF8"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/barclays-hackathon",
      "live": ""
    },
    "gallery": [
      "gallery/barclays-hackathon/img1.png",
      "gallery/barclays-hackathon/img2.png",
      "gallery/barclays-hackathon/img3.png",
      "gallery/barclays-hackathon/img4.png"
    ],
    "features": [
      "Comprehensive password strength analysis (entropy, patterns, crack time, attack vectors)",
      "GenAI-powered, personalized password improvement suggestions",
      "Visual strength indicator and real-time feedback",
      "Explains vulnerabilities and gives actionable security tips",
      "Advanced transformation engine for memorable, secure passwords",
      "RESTful API for password analysis and suggestions",
      "Responsive frontend with real-time UI updates",
      "Pattern and dictionary attack detection",
      "Frontend strength meter and vulnerability breakdown"
    ]
  },
  {
    "id": 25,
    "title": "WebVCall – WebRTC Video Calling Application",
    "summary": "A peer-to-peer video calling app using WebRTC and Quarkus, enabling real-time, high-quality communication with a modern and responsive UI.",
    "description": "WebVCall is a feature-rich, peer-to-peer video calling platform that leverages WebRTC for direct audio and video connections between browsers—no plugins or external software required. The app offers a seamless, account-free experience: users join or create private rooms with just a display name and a room code. The application features a modern, glassmorphism-inspired UI, responsive design for all devices, dark/light mode switching, mute controls, and visual connection indicators. The backend, built with Quarkus, uses WebSockets for signaling and supports STUN/TURN servers for reliable NAT traversal, ensuring robust and private calls across networks.",
    "image": "images/webvcall/main.png",
    "category": "fullstack",
    "isNew": true,
    "technologies": [
      {
        "name": "JavaScript",
        "icon": "fab fa-js-square",
        "color": "#F7DF1E"
      },
      {
        "name": "HTML",
        "icon": "fab fa-html5",
        "color": "#E34F26"
      },
      {
        "name": "CSS",
        "icon": "fab fa-css3-alt",
        "color": "#1572B6"
      },
      {
        "name": "Tailwind CSS",
        "icon": "fas fa-wind",
        "color": "#38BDF8"
      },
      {
        "name": "WebRTC",
        "icon": "fas fa-video",
        "color": "#00BFFF"
      },
      {
        "name": "Quarkus",
        "icon": "fas fa-rocket",
        "color": "#4695EB"
      },
      {
        "name": "WebSocket",
        "icon": "fas fa-exchange-alt",
        "color": "#00BFFF"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/stellar-connect",
      "live": ""
    },
    "gallery": [
      "gallery/webvcall/img1.png",
      "gallery/webvcall/img2.png",
      "gallery/webvcall/img3.png",
      "gallery/webvcall/img4.png"
    ],
    "features": [
      "Real-time, peer-to-peer video and audio calls using WebRTC",
      "No account required—join with a name and room code",
      "Responsive, glassmorphism-inspired UI for desktop and mobile",
      "Dark and light mode support",
      "Audio and video mute controls",
      "Visual indicators for connection status",
      "Room-based communication for private conversations",
      "WebSocket signaling with Quarkus backend",
      "STUN/TURN support for NAT traversal and reliability"
    ]
  },
  {
    "id": 26,
    "title": "URL Shortener (Quarkus)",
    "summary": "A modern, high-performance URL shortener with analytics, expiration options, and a sleek UI powered by Quarkus and Tailwind CSS.",
    "description": "This URL Shortener is a fast, feature-rich service for creating compact, trackable links. Users can shorten long URLs, set custom expiration dates, and view detailed analytics for every link, including click counts and last access time. The backend leverages Quarkus and JPA/Hibernate for speed and scalability, while the frontend uses HTML5, Tailwind CSS, JavaScript, and Qute templating for a responsive, professional user experience. Designed with production in mind, it supports custom domains, easy configuration, and a REST API for integration. Perfect for marketers, developers, and anyone needing smart link management.",
    "image": "images/url-shortener/main.png",
    "category": "fullstack",
    "isNew": true,
    "technologies": [
      {
        "name": "Java",
        "icon": "fab fa-java",
        "color": "#007396"
      },
      {
        "name": "Quarkus",
        "icon": "fas fa-rocket",
        "color": "#4695EB"
      },
      {
        "name": "JPA/Hibernate",
        "icon": "fas fa-database",
        "color": "#F29111"
      },
      {
        "name": "HTML",
        "icon": "fab fa-html5",
        "color": "#E34F26"
      },
      {
        "name": "Tailwind CSS",
        "icon": "fas fa-wind",
        "color": "#38BDF8"
      },
      {
        "name": "JavaScript",
        "icon": "fab fa-js-square",
        "color": "#F7DF1E"
      },
      {
        "name": "Qute",
        "icon": "fas fa-code",
        "color": "#FF7043"
      },
      {
        "name": "AOS",
        "icon": "fas fa-magic",
        "color": "#673AB7"
      },
      {
        "name": "Maven",
        "icon": "fab fa-maven",
        "color": "#C71A36"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/UrlShorter",
      "live": ""
    },
    "gallery": [
      "gallery/url-shortener/img1.png",
      "gallery/url-shortener/img2.png",
      "gallery/url-shortener/img3.png",
      "gallery/url-shortener/img4.png"
    ],
    "features": [
      "Shorten long URLs with a single click",
      "Set custom expiration dates (1-365 days)",
      "Track clicks and view detailed analytics per link",
      "Copy-to-clipboard convenience",
      "Responsive, animated UI with Tailwind CSS and AOS",
      "REST API for programmatic shortening and stats",
      "Production-ready configuration for custom domains",
      "High-performance backend using Quarkus",
      "Modern, accessible frontend with Qute templating"
    ]
  },
  {
    "id": 27,
    "title": "Micronaut JWT Authentication",
    "summary": "A secure, modern authentication system using Micronaut and JWT, featuring a beautiful UI with Tailwind CSS and Alpine.js.",
    "description": "Micronaut JWT Authentication is a full-featured authentication and user management solution. Built with the Micronaut framework and leveraging JWT for secure, stateless authentication, this project offers robust user registration, login, and profile management features. The modern UI is crafted with Tailwind CSS and Alpine.js, ensuring a responsive and intuitive user experience. Role-based access control enables granular permissions, and token refresh mechanisms keep sessions secure without user friction. The RESTful API is ready for integration with any frontend, and the backend combines Java 17, Hibernate/JPA, and JJWT for reliability and speed. Ideal for modern web apps requiring scalable, secure authentication.",
    "image": "images/micronaut-jwt/main.png",
    "category": "fullstack",
    "isNew": true,
    "technologies": [
      {
        "name": "Java",
        "icon": "fab fa-java",
        "color": "#007396"
      },
      {
        "name": "Micronaut",
        "icon": "fas fa-cubes",
        "color": "#00B7C3"
      },
      {
        "name": "JWT (JJWT)",
        "icon": "fas fa-key",
        "color": "#F29111"
      },
      {
        "name": "Hibernate/JPA",
        "icon": "fas fa-database",
        "color": "#A10000"
      },
      {
        "name": "Tailwind CSS",
        "icon": "fas fa-wind",
        "color": "#38BDF8"
      },
      {
        "name": "Alpine.js",
        "icon": "fab fa-js-square",
        "color": "#8BC34A"
      },
      {
        "name": "Chart.js",
        "icon": "fas fa-chart-bar",
        "color": "#FF6384"
      },
      {
        "name": "Animate.css",
        "icon": "fas fa-magic",
        "color": "#673AB7"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/Micronaut-JWT",
      "live": ""
    },
    "gallery": [
      "gallery/micronaut-jwt/img1.png",
      "gallery/micronaut-jwt/img2.png",
      "gallery/micronaut-jwt/img3.png",
      "gallery/micronaut-jwt/img4.png"
    ],
    "features": [
      "JWT-based authentication and secure token storage",
      "User registration, login, logout, and profile management",
      "Automatic access/refresh token renewal",
      "Role-based access control for granular permissions",
      "Modern, responsive UI with Tailwind CSS and Alpine.js",
      "Interactive charts and animations with Chart.js and Animate.css",
      "RESTful API endpoints for easy integration",
      "Easy configuration of secret keys and expiration policies",
      "OAuth provider support (optional)"
    ]
  },
  {
    "id": 28,
    "title": "College Management System",
    "summary": "A comprehensive, multi-role college management platform built with Java Spring Boot and modern web technologies, streamlining institutional administration, inventory, and resource management.",
    "description": "The College Management System is an all-in-one, web-based platform that digitizes and automates administrative workflows for educational institutions. Featuring secure role-based access for Principals, Directors, HODs, Teachers, and Lab Assistants, it offers integrated modules for user management, department and building administration, lab management, and robust inventory tracking with approval workflows. The system supports personalized user profiles, real-time analytics, responsive dashboards, and secure authentication with encrypted passwords and CSRF protection. Built with Java Spring Boot, Thymeleaf, Tailwind CSS, and Spring Data JPA, the platform ensures scalable, maintainable, and secure operations for colleges and universities.",
    "image": "images/college-management/main.png",
    "category": "fullstack",
    "isNew": true,
    "technologies": [
      {
        "name": "Java",
        "icon": "fab fa-java",
        "color": "#007396"
      },
      {
        "name": "Spring Boot",
        "icon": "fas fa-leaf",
        "color": "#6DB33F"
      },
      {
        "name": "Spring Security",
        "icon": "fas fa-lock",
        "color": "#1A202C"
      },
      {
        "name": "Spring Data JPA",
        "icon": "fas fa-database",
        "color": "#F29111"
      },
      {
        "name": "Hibernate",
        "icon": "fas fa-database",
        "color": "#A10000"
      },
      {
        "name": "Thymeleaf",
        "icon": "fas fa-code",
        "color": "#005F0F"
      },
      {
        "name": "Tailwind CSS",
        "icon": "fas fa-wind",
        "color": "#38BDF8"
      },
      {
        "name": "HTML",
        "icon": "fab fa-html5",
        "color": "#E34F26"
      },
      {
        "name": "JavaScript",
        "icon": "fab fa-js-square",
        "color": "#F7DF1E"
      },
      {
        "name": "jQuery",
        "icon": "fas fa-code",
        "color": "#0769AD"
      },
      {
        "name": "Amazon S3",
        "icon": "fas fa-cloud",
        "color": "#FF9900"
      },
      {
        "name": "Maven",
        "icon": "fab fa-maven",
        "color": "#C71A36"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/College",
      "live": ""
    },
    "gallery": [
      "gallery/college-management/img1.png",
      "gallery/college-management/img2.png",
      "gallery/college-management/img3.png",
      "gallery/college-management/img4.png"
    ],
    "features": [
      "Role-based access control for Principals, Directors, HODs, Teachers, Lab Assistants, and Admins",
      "Secure authentication with encrypted passwords and CSRF protection",
      "Personalized user profiles with photo uploads",
      "Comprehensive inventory management with approval workflows",
      "Department, lab, and building administration",
      "Lab creation, staff assignment, and resource allocation",
      "Real-time dashboards and analytics, including department and resource statistics",
      "Responsive, mobile-friendly UI with Tailwind CSS",
      "Amazon S3 integration for storing user profile photos and media",
      "Robust security with input validation, session management, and granular permissions"
    ]
  },
  {
    "id": 29,
    "title": "Interview_QA – Java & Frameworks Q&A",
    "summary": "A curated collection of interview questions and answers for Java, OOP, Spring Boot, Quarkus, Hibernate, JUnit, and Micronaut.",
    "description": "Interview_QA is a comprehensive repository of curated interview questions and answers covering core Java concepts, object-oriented programming principles, and popular frameworks including Spring Boot, Quarkus, Hibernate, JUnit, and Micronaut. Designed for job seekers, students, and professionals, it provides clear, structured Q&A sets to help you prepare for technical interviews or deepen your understanding of modern Java development. The content is organized by topic and framework, with concise explanations and practical code examples. Ideal for last-minute revision or systematic study.",
    "image": "images/interview-qa/main.png",
    "category": "documentation",
    "isNew": true,
    "technologies": [
      {
        "name": "Java",
        "icon": "fab fa-java",
        "color": "#007396"
      },
      {
        "name": "Spring Boot",
        "icon": "fas fa-leaf",
        "color": "#6DB33F"
      },
      {
        "name": "Quarkus",
        "icon": "fas fa-rocket",
        "color": "#4695EB"
      },
      {
        "name": "Hibernate",
        "icon": "fas fa-database",
        "color": "#A10000"
      },
      {
        "name": "JUnit",
        "icon": "fas fa-vial",
        "color": "#25A162"
      },
      {
        "name": "Micronaut",
        "icon": "fas fa-cubes",
        "color": "#00B7C3"
      },
      {
        "name": "Markdown",
        "icon": "fab fa-markdown",
        "color": "#083fa1"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/Interview_QA",
      "live": ""
    },
    "gallery": [
      "gallery/interview-qa/img1.png",
      "gallery/interview-qa/img2.png",
      "gallery/interview-qa/img3.png",
      "gallery/interview-qa/img4.png"
    ],
    "features": [
      "Curated Q&A for Java, OOP, Spring Boot, Quarkus, Hibernate, JUnit, and Micronaut",
      "Topic-wise organization for fast navigation",
      "Concise explanations and practice code snippets",
      "Ideal for interview preparation and revision",
      "Continuously updated with new questions and answers"
    ]
  },
  {
    "id": 30,
    "title": "NextExt – Enhanced Notepad App",
    "summary": "A modern, multi-tab notepad application built with Electron and TailwindCSS, featuring a GitHub-inspired dark mode, file explorer, and autosave.",
    "description": "NextExt is a feature-rich notepad app designed for productivity and a delightful user experience. Built on Electron and styled with TailwindCSS, it offers a sleek dark mode interface inspired by GitHub, multi-tab editing, a built-in file explorer sidebar, and automatic file saving. Smooth animations, custom scrollbars, and familiar keyboard shortcuts create a seamless workflow. NextExt supports Windows, macOS, and Linux, making it a versatile choice for developers and writers alike.",
    "image": "images/notepad-app/main.png",
    "category": "desktop",
    "isNew": true,
    "technologies": [
      {
        "name": "Electron",
        "icon": "fas fa-bolt",
        "color": "#47848F"
      },
      {
        "name": "Tailwind CSS",
        "icon": "fas fa-wind",
        "color": "#38BDF8"
      },
      {
        "name": "JavaScript",
        "icon": "fab fa-js-square",
        "color": "#F7DF1E"
      },
      {
        "name": "HTML",
        "icon": "fab fa-html5",
        "color": "#E34F26"
      },
      {
        "name": "Node.js",
        "icon": "fab fa-node-js",
        "color": "#83CD29"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/Notepad-app",
      "live": ""
    },
    "gallery": [
      "gallery/notepad-app/img1.png",
      "gallery/notepad-app/img2.png",
      "gallery/notepad-app/img3.png",
      "gallery/notepad-app/img4.png"
    ],
    "features": [
      "GitHub-inspired dark mode UI",
      "Multi-tab editing for simultaneous files",
      "Sidebar file explorer for easy navigation",
      "Automatic saving on keyboard shortcuts",
      "Modern UI with animations and custom scrollbars",
      "Keyboard shortcuts for all major actions",
      "Cross-platform support (Windows, macOS, Linux)",
      "Clean, intuitive design"
    ]
  },
  {
    "id": 32,
    "title": "Project Portfolio",
    "summary": "A dynamic, visually stunning project portfolio built with JSON, JavaScript, Tailwind CSS, Tilt.js, scroll animations, and the Fetch API.",
    "description": "Project Portfolio is a modern, interactive portfolio website designed to showcase projects with engaging UI effects. It leverages JSON as a project data source, dynamically fetching and rendering content using the Fetch API and vanilla JavaScript. The site features a stylish layout powered by Tailwind CSS, with smooth scroll-triggered animations and 3D card tilting effects provided by Tilt.js. The result is a fully responsive, fast-loading, and highly customizable portfolio—perfect for developers, designers, or anyone wanting to present their work in an eye-catching way.",
    "image": "images/project-portfolio/main.png",
    "category": "frontend",
    "isNew": true,
    "technologies": [
      {
        "name": "JavaScript",
        "icon": "fab fa-js-square",
        "color": "#F7DF1E"
      },
      {
        "name": "JSON",
        "icon": "fas fa-database",
        "color": "#FF9900"
      },
      {
        "name": "Tailwind CSS",
        "icon": "fas fa-wind",
        "color": "#38BDF8"
      },
      {
        "name": "HTML",
        "icon": "fab fa-html5",
        "color": "#E34F26"
      },
      {
        "name": "Tilt.js",
        "icon": "fas fa-cube",
        "color": "#6C63FF"
      },
      {
        "name": "Scroll Animation",
        "icon": "fas fa-arrows-alt-v",
        "color": "#4A5568"
      },
      {
        "name": "Fetch API",
        "icon": "fas fa-cloud-download-alt",
        "color": "#4FD1C5"
      }
    ],
    "links": {
      "github": "https://github.com/Vin-it-9/Project-Portfolio",
      "live": ""
    },
    "gallery": [
      "gallery/project-portfolio/img1.png",
      "gallery/project-portfolio/img2.png",
      "gallery/project-portfolio/img3.png",
      "gallery/project-portfolio/img4.png"
    ],
    "features": [
      "Dynamic project loading from JSON via Fetch API",
      "Interactive 3D tilt effects with Tilt.js",
      "Smooth scroll-triggered animations for engaging UI",
      "Responsive design with Tailwind CSS",
      "Modern, clean layout and customizable color scheme",
      "No frameworks required—lightweight and fast",
      "Easy to add or update projects via JSON data file"
    ]
  }
]